/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package ATS;

import java.io.File;
import java.sql.Connection;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.text.SimpleDateFormat;
import javax.swing.JFileChooser;
import javax.swing.JOptionPane;

/**
 * NEED TO CHANGE USER PASS AND PATH OF BACKUPDBBTN ACTIONPERFORMED and RESTOREDBBTN ACTIONPERFORMED
 * @author Reha
 */
public class Admin extends javax.swing.JFrame {

    Connection conn = null;
    PreparedStatement pst = null;
    PreparedStatement p = null;
    ResultSet rs = null;
    String path = null;
    String filename;

    /**
     * Creates new form Test
     */
    public Admin() {
        initComponents();
        //Connect to database
        conn = Driver.ConnectDB();
        
//Seeting the visibility when a admin page opens so only dashboard can be seen
        Dashboard.setVisible(true);
        Backup.setVisible(false);
        userAccPanel.setVisible(false);
        blankPanel.setVisible(false);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        AdminBackPanel = new javax.swing.JPanel();
        AdminMenuPanel = new javax.swing.JPanel();
        homeBtn = new javax.swing.JButton();
        backupBtn = new javax.swing.JButton();
        UserAccBtn = new javax.swing.JButton();
        rLogOut = new javax.swing.JButton();
        systemStockBtn = new javax.swing.JButton();
        ReportsButton = new javax.swing.JButton();
        AdminDynamicPanel = new javax.swing.JPanel();
        Dashboard = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        infoTextArea1 = new javax.swing.JTextArea();
        jLabel2 = new javax.swing.JLabel();
        Backup = new javax.swing.JPanel();
        backupDbBtn = new javax.swing.JButton();
        restoreDbBtn = new javax.swing.JButton();
        backupPath = new javax.swing.JTextField();
        backupBrowseBtn = new javax.swing.JButton();
        restorePath = new javax.swing.JTextField();
        restoreBrowseBtn = new javax.swing.JButton();
        userAccPanel = new javax.swing.JPanel();
        registerPanel = new javax.swing.JPanel();
        name = new javax.swing.JLabel();
        password = new javax.swing.JLabel();
        trole = new javax.swing.JComboBox<String>();
        role = new javax.swing.JLabel();
        tname = new javax.swing.JTextField();
        rRegister = new javax.swing.JButton();
        tpassword = new javax.swing.JPasswordField();
        rUpdate = new javax.swing.JButton();
        id = new javax.swing.JLabel();
        tid = new javax.swing.JTextField();
        rDelete = new javax.swing.JButton();
        viewBtn = new javax.swing.JButton();
        systemStockPanel = new javax.swing.JPanel();
        blankPanel = new javax.swing.JPanel();
        Date = new javax.swing.JLabel();
        viewStockBtn = new javax.swing.JButton();
        deleteBlankBtn = new javax.swing.JButton();
        addBlankBtn = new javax.swing.JButton();
        blankType = new javax.swing.JLabel();
        blankTypeCombo = new javax.swing.JComboBox<String>();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        lowerBlankNo = new javax.swing.JTextField();
        higherBlankNo = new javax.swing.JTextField();
        dateDay = new javax.swing.JComboBox<String>();
        dateMonth = new javax.swing.JComboBox<String>();
        dateYear = new javax.swing.JComboBox<String>();
        AdminTopPanel = new javax.swing.JPanel();
        AirViaLtdLabel = new javax.swing.JLabel();
        PlaneImg = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        AdminBackPanel.setBackground(new java.awt.Color(255, 255, 255));

        AdminMenuPanel.setBackground(new java.awt.Color(0, 0, 51));

        homeBtn.setText("Home");
        homeBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                homeBtnActionPerformed(evt);
            }
        });

        backupBtn.setText("Backup/Restore");
        backupBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                backupBtnActionPerformed(evt);
            }
        });

        UserAccBtn.setText("User Accounts");
        UserAccBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                UserAccBtnActionPerformed(evt);
            }
        });

        rLogOut.setText("Log Out");
        rLogOut.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                rLogOutActionPerformed(evt);
            }
        });

        systemStockBtn.setText("System Stock");
        systemStockBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                systemStockBtnActionPerformed(evt);
            }
        });

        ReportsButton.setText("Reports");
        ReportsButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ReportsButtonActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout AdminMenuPanelLayout = new javax.swing.GroupLayout(AdminMenuPanel);
        AdminMenuPanel.setLayout(AdminMenuPanelLayout);
        AdminMenuPanelLayout.setHorizontalGroup(
            AdminMenuPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(AdminMenuPanelLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(AdminMenuPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(AdminMenuPanelLayout.createSequentialGroup()
                        .addGroup(AdminMenuPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(UserAccBtn, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(backupBtn, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(homeBtn, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                        .addGap(0, 0, Short.MAX_VALUE))
                    .addComponent(systemStockBtn, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(rLogOut, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(ReportsButton, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap())
        );
        AdminMenuPanelLayout.setVerticalGroup(
            AdminMenuPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(AdminMenuPanelLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(homeBtn)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(backupBtn)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(UserAccBtn)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(systemStockBtn)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(ReportsButton)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(rLogOut)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        Dashboard.setBackground(new java.awt.Color(241, 223, 200));

        jLabel1.setFont(new java.awt.Font("Kailasa", 1, 24)); // NOI18N
        jLabel1.setText("Welcome ADMINISTRATOR!");

        infoTextArea1.setColumns(20);
        infoTextArea1.setFont(new java.awt.Font("Lucida Grande", 1, 14)); // NOI18N
        infoTextArea1.setRows(5);
        infoTextArea1.setText("Please use the Menu buttons on \nthe left to navigate.");
        jScrollPane1.setViewportView(infoTextArea1);

        jLabel2.setFont(new java.awt.Font("Lucida Grande", 1, 14)); // NOI18N
        jLabel2.setText("TRAVEL AGENT ID: 1");

        javax.swing.GroupLayout DashboardLayout = new javax.swing.GroupLayout(Dashboard);
        Dashboard.setLayout(DashboardLayout);
        DashboardLayout.setHorizontalGroup(
            DashboardLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(DashboardLayout.createSequentialGroup()
                .addGroup(DashboardLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(DashboardLayout.createSequentialGroup()
                        .addGap(165, 165, 165)
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(DashboardLayout.createSequentialGroup()
                        .addGap(142, 142, 142)
                        .addComponent(jLabel1))
                    .addGroup(DashboardLayout.createSequentialGroup()
                        .addGap(226, 226, 226)
                        .addComponent(jLabel2)))
                .addContainerGap(158, Short.MAX_VALUE))
        );
        DashboardLayout.setVerticalGroup(
            DashboardLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(DashboardLayout.createSequentialGroup()
                .addGap(80, 80, 80)
                .addComponent(jLabel1)
                .addGap(31, 31, 31)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(42, 42, 42)
                .addComponent(jLabel2)
                .addContainerGap(87, Short.MAX_VALUE))
        );

        Backup.setBackground(new java.awt.Color(241, 223, 200));
        Backup.setPreferredSize(new java.awt.Dimension(639, 378));

        backupDbBtn.setText("Backup Database");
        backupDbBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                backupDbBtnActionPerformed(evt);
            }
        });

        restoreDbBtn.setText("Restore Database");
        restoreDbBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                restoreDbBtnActionPerformed(evt);
            }
        });

        backupPath.setEditable(false);

        backupBrowseBtn.setText("Browse");
        backupBrowseBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                backupBrowseBtnActionPerformed(evt);
            }
        });

        restorePath.setEditable(false);
        restorePath.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                restorePathActionPerformed(evt);
            }
        });

        restoreBrowseBtn.setText("Browse");
        restoreBrowseBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                restoreBrowseBtnActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout BackupLayout = new javax.swing.GroupLayout(Backup);
        Backup.setLayout(BackupLayout);
        BackupLayout.setHorizontalGroup(
            BackupLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(BackupLayout.createSequentialGroup()
                .addGroup(BackupLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(BackupLayout.createSequentialGroup()
                        .addGap(101, 101, 101)
                        .addGroup(BackupLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(restorePath, javax.swing.GroupLayout.DEFAULT_SIZE, 341, Short.MAX_VALUE)
                            .addComponent(backupPath))
                        .addGap(18, 18, 18)
                        .addGroup(BackupLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(backupBrowseBtn)
                            .addComponent(restoreBrowseBtn)))
                    .addGroup(BackupLayout.createSequentialGroup()
                        .addGap(216, 216, 216)
                        .addComponent(restoreDbBtn))
                    .addGroup(BackupLayout.createSequentialGroup()
                        .addGap(219, 219, 219)
                        .addComponent(backupDbBtn)))
                .addContainerGap(91, Short.MAX_VALUE))
        );
        BackupLayout.setVerticalGroup(
            BackupLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(BackupLayout.createSequentialGroup()
                .addGap(71, 71, 71)
                .addGroup(BackupLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(backupPath, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(backupBrowseBtn))
                .addGap(18, 18, 18)
                .addComponent(backupDbBtn)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 62, Short.MAX_VALUE)
                .addGroup(BackupLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(restorePath, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(restoreBrowseBtn))
                .addGap(18, 18, 18)
                .addComponent(restoreDbBtn)
                .addGap(96, 96, 96))
        );

        userAccPanel.setBackground(new java.awt.Color(241, 223, 200));
        userAccPanel.setPreferredSize(new java.awt.Dimension(639, 378));

        registerPanel.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "User accounts:", javax.swing.border.TitledBorder.CENTER, javax.swing.border.TitledBorder.DEFAULT_POSITION));

        name.setText("Name:");

        password.setText("Password:");

        trole.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Administrator", "Manager", "Advisor" }));

        role.setText("Role:");

        rRegister.setText("Register Employee");
        rRegister.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                rRegisterActionPerformed(evt);
            }
        });

        rUpdate.setText("Update Employee");
        rUpdate.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                rUpdateActionPerformed(evt);
            }
        });

        id.setText("Employee Id:");

        rDelete.setText("Delete Employee");
        rDelete.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                rDeleteActionPerformed(evt);
            }
        });

        viewBtn.setText("View Empolyee");
        viewBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                viewBtnActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout registerPanelLayout = new javax.swing.GroupLayout(registerPanel);
        registerPanel.setLayout(registerPanelLayout);
        registerPanelLayout.setHorizontalGroup(
            registerPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(registerPanelLayout.createSequentialGroup()
                .addContainerGap(74, Short.MAX_VALUE)
                .addGroup(registerPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, registerPanelLayout.createSequentialGroup()
                        .addGroup(registerPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(password)
                            .addComponent(name)
                            .addComponent(id)
                            .addComponent(role))
                        .addGap(18, 18, 18)
                        .addGroup(registerPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(tname, javax.swing.GroupLayout.PREFERRED_SIZE, 204, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(tid, javax.swing.GroupLayout.PREFERRED_SIZE, 204, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(trole, javax.swing.GroupLayout.PREFERRED_SIZE, 204, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(tpassword, javax.swing.GroupLayout.PREFERRED_SIZE, 204, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(113, 113, 113))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, registerPanelLayout.createSequentialGroup()
                        .addGroup(registerPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                            .addComponent(rDelete, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(rRegister, javax.swing.GroupLayout.Alignment.LEADING))
                        .addGap(44, 44, 44)
                        .addGroup(registerPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(rUpdate, javax.swing.GroupLayout.DEFAULT_SIZE, 160, Short.MAX_VALUE)
                            .addComponent(viewBtn, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                        .addGap(62, 62, 62))))
        );
        registerPanelLayout.setVerticalGroup(
            registerPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(registerPanelLayout.createSequentialGroup()
                .addGap(21, 21, 21)
                .addGroup(registerPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(tid, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(id))
                .addGap(12, 12, 12)
                .addGroup(registerPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(tname, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(name))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(registerPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(tpassword, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(password))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(registerPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(trole, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(role))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 39, Short.MAX_VALUE)
                .addGroup(registerPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(rUpdate, javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(rRegister, javax.swing.GroupLayout.Alignment.TRAILING))
                .addGap(18, 18, 18)
                .addGroup(registerPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(rDelete)
                    .addComponent(viewBtn))
                .addContainerGap())
        );

        javax.swing.GroupLayout userAccPanelLayout = new javax.swing.GroupLayout(userAccPanel);
        userAccPanel.setLayout(userAccPanelLayout);
        userAccPanelLayout.setHorizontalGroup(
            userAccPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(userAccPanelLayout.createSequentialGroup()
                .addGap(64, 64, 64)
                .addComponent(registerPanel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(64, Short.MAX_VALUE))
        );
        userAccPanelLayout.setVerticalGroup(
            userAccPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(userAccPanelLayout.createSequentialGroup()
                .addGap(25, 25, 25)
                .addComponent(registerPanel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(46, Short.MAX_VALUE))
        );

        systemStockPanel.setBackground(new java.awt.Color(241, 223, 200));
        systemStockPanel.setPreferredSize(new java.awt.Dimension(639, 378));

        blankPanel.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "Blanks", javax.swing.border.TitledBorder.CENTER, javax.swing.border.TitledBorder.DEFAULT_POSITION));

        Date.setText("Date (ddmmyyyy):");

        viewStockBtn.setText("View Stock");
        viewStockBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                viewStockBtnActionPerformed(evt);
            }
        });

        deleteBlankBtn.setText("Delete Blank");
        deleteBlankBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                deleteBlankBtnActionPerformed(evt);
            }
        });

        addBlankBtn.setText("Add Blank");
        addBlankBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                addBlankBtnActionPerformed(evt);
            }
        });

        blankType.setText("Blank Type:");

        blankTypeCombo.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "444", "440", "420", "201", "101", "451", "452" }));

        jLabel3.setText("Type in the last 8 digits of the blank number.");

        jLabel4.setText("Lowest Blank No:");

        jLabel5.setText("Highest Blank No:");

        lowerBlankNo.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                lowerBlankNoActionPerformed(evt);
            }
        });

        dateDay.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "01", "02", "03", "04", "05", "06", "07", "08", "09", "10", "11", "12", "13", "14", "15", "16", "17", "18", "19", "20", "21", "22", "23", "24", "25", "26", "27", "28", "29", "30", "31" }));

        dateMonth.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "01", "02", "03", "04", "05", "06", "07", "08", "09", "10", "11", "12" }));

        dateYear.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "2015", "2016", "2017", "2018", "2019", "2020" }));

        javax.swing.GroupLayout blankPanelLayout = new javax.swing.GroupLayout(blankPanel);
        blankPanel.setLayout(blankPanelLayout);
        blankPanelLayout.setHorizontalGroup(
            blankPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(blankPanelLayout.createSequentialGroup()
                .addGroup(blankPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(blankPanelLayout.createSequentialGroup()
                        .addGap(9, 9, 9)
                        .addGroup(blankPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(jLabel5)
                            .addComponent(jLabel4))
                        .addGap(18, 18, 18)
                        .addGroup(blankPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(lowerBlankNo)
                            .addComponent(higherBlankNo, javax.swing.GroupLayout.Alignment.LEADING)))
                    .addGroup(blankPanelLayout.createSequentialGroup()
                        .addGap(52, 52, 52)
                        .addGroup(blankPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel3)
                            .addGroup(blankPanelLayout.createSequentialGroup()
                                .addGroup(blankPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                    .addComponent(blankType)
                                    .addComponent(Date))
                                .addGap(18, 18, 18)
                                .addGroup(blankPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(blankPanelLayout.createSequentialGroup()
                                        .addGap(18, 18, 18)
                                        .addComponent(dateDay, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addComponent(dateMonth, javax.swing.GroupLayout.PREFERRED_SIZE, 72, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addComponent(dateYear, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                                    .addComponent(blankTypeCombo, javax.swing.GroupLayout.PREFERRED_SIZE, 282, javax.swing.GroupLayout.PREFERRED_SIZE))))
                        .addGap(0, 0, Short.MAX_VALUE))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, blankPanelLayout.createSequentialGroup()
                        .addGap(0, 0, Short.MAX_VALUE)
                        .addComponent(viewStockBtn, javax.swing.GroupLayout.PREFERRED_SIZE, 122, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(deleteBlankBtn)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(addBlankBtn, javax.swing.GroupLayout.PREFERRED_SIZE, 122, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGap(47, 47, 47))
        );
        blankPanelLayout.setVerticalGroup(
            blankPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(blankPanelLayout.createSequentialGroup()
                .addGap(24, 24, 24)
                .addGroup(blankPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(Date)
                    .addComponent(dateDay, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(dateMonth, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(dateYear, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(blankPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(blankType)
                    .addComponent(blankTypeCombo, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jLabel3)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(blankPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel4)
                    .addComponent(lowerBlankNo, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(blankPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel5)
                    .addComponent(higherBlankNo, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 59, Short.MAX_VALUE)
                .addGroup(blankPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(viewStockBtn)
                    .addComponent(deleteBlankBtn)
                    .addComponent(addBlankBtn)))
        );

        javax.swing.GroupLayout systemStockPanelLayout = new javax.swing.GroupLayout(systemStockPanel);
        systemStockPanel.setLayout(systemStockPanelLayout);
        systemStockPanelLayout.setHorizontalGroup(
            systemStockPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, systemStockPanelLayout.createSequentialGroup()
                .addContainerGap(38, Short.MAX_VALUE)
                .addComponent(blankPanel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(77, 77, 77))
        );
        systemStockPanelLayout.setVerticalGroup(
            systemStockPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(systemStockPanelLayout.createSequentialGroup()
                .addGap(19, 19, 19)
                .addComponent(blankPanel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(41, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout AdminDynamicPanelLayout = new javax.swing.GroupLayout(AdminDynamicPanel);
        AdminDynamicPanel.setLayout(AdminDynamicPanelLayout);
        AdminDynamicPanelLayout.setHorizontalGroup(
            AdminDynamicPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(Dashboard, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addGroup(AdminDynamicPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addComponent(Backup, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, 649, Short.MAX_VALUE))
            .addGroup(AdminDynamicPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addComponent(userAccPanel, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, 649, Short.MAX_VALUE))
            .addGroup(AdminDynamicPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addComponent(systemStockPanel, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, 649, Short.MAX_VALUE))
        );
        AdminDynamicPanelLayout.setVerticalGroup(
            AdminDynamicPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(AdminDynamicPanelLayout.createSequentialGroup()
                .addComponent(Dashboard, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, Short.MAX_VALUE))
            .addGroup(AdminDynamicPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addComponent(Backup, javax.swing.GroupLayout.DEFAULT_SIZE, 392, Short.MAX_VALUE))
            .addGroup(AdminDynamicPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addComponent(userAccPanel, javax.swing.GroupLayout.DEFAULT_SIZE, 392, Short.MAX_VALUE))
            .addGroup(AdminDynamicPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addComponent(systemStockPanel, javax.swing.GroupLayout.DEFAULT_SIZE, 392, Short.MAX_VALUE))
        );

        AdminTopPanel.setBackground(new java.awt.Color(0, 0, 51));

        AirViaLtdLabel.setFont(new java.awt.Font("Tahoma", 1, 48)); // NOI18N
        AirViaLtdLabel.setForeground(new java.awt.Color(255, 153, 51));
        AirViaLtdLabel.setText("AirViaLtd");

        PlaneImg.setIcon(new javax.swing.ImageIcon(getClass().getResource("/ATS/images/plane.png"))); // NOI18N

        javax.swing.GroupLayout AdminTopPanelLayout = new javax.swing.GroupLayout(AdminTopPanel);
        AdminTopPanel.setLayout(AdminTopPanelLayout);
        AdminTopPanelLayout.setHorizontalGroup(
            AdminTopPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(AdminTopPanelLayout.createSequentialGroup()
                .addGap(230, 230, 230)
                .addComponent(PlaneImg)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(AirViaLtdLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 233, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(231, Short.MAX_VALUE))
        );
        AdminTopPanelLayout.setVerticalGroup(
            AdminTopPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(AdminTopPanelLayout.createSequentialGroup()
                .addGap(24, 24, 24)
                .addGroup(AdminTopPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(AdminTopPanelLayout.createSequentialGroup()
                        .addGap(14, 14, 14)
                        .addComponent(AirViaLtdLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 51, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(PlaneImg, javax.swing.GroupLayout.PREFERRED_SIZE, 73, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(29, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout AdminBackPanelLayout = new javax.swing.GroupLayout(AdminBackPanel);
        AdminBackPanel.setLayout(AdminBackPanelLayout);
        AdminBackPanelLayout.setHorizontalGroup(
            AdminBackPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(AdminBackPanelLayout.createSequentialGroup()
                .addComponent(AdminMenuPanel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(AdminDynamicPanel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
            .addComponent(AdminTopPanel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        AdminBackPanelLayout.setVerticalGroup(
            AdminBackPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, AdminBackPanelLayout.createSequentialGroup()
                .addComponent(AdminTopPanel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(AdminBackPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(AdminDynamicPanel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(AdminMenuPanel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(AdminBackPanel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(AdminBackPanel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        setSize(new java.awt.Dimension(800, 522));
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    private void homeBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_homeBtnActionPerformed
        // TODO add your handling code here:
        //Only dashboard visible
        Dashboard.setVisible(true);
        Backup.setVisible(false);
        userAccPanel.setVisible(false);
        blankPanel.setVisible(false);

    }//GEN-LAST:event_homeBtnActionPerformed

    private void backupBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_backupBtnActionPerformed
        // TODO add your handling code here:
        //Only backup page visible
        Backup.setVisible(true);
        Dashboard.setVisible(false);
        userAccPanel.setVisible(false);
        blankPanel.setVisible(false);
    }//GEN-LAST:event_backupBtnActionPerformed

    private void UserAccBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_UserAccBtnActionPerformed
        
        //Only register user page visible
        userAccPanel.setVisible(true);
        Dashboard.setVisible(false);
        Backup.setVisible(false);
        blankPanel.setVisible(false);

    }//GEN-LAST:event_UserAccBtnActionPerformed

    private void rRegisterActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_rRegisterActionPerformed
       
        int id = Integer.parseInt(tid.getText());
        //int TAid = Integer.parseInt(TAId.getText());

        String Sql = "insert into users (userId, password, role, name, TravelAgent_TravelAgentID)"
                + "values('" + id + "', '" + tpassword.getText()
                + "', '" + trole.getSelectedItem() + "', '" + tname.getText() + "', '" + 1 + "')";

//If all fields are field in the show register sucessful message
        try {
            if (!(tid.getText().trim().isEmpty()) && !(tpassword.getText().trim().isEmpty()) 
                    && !(tname.getText().trim().isEmpty())) {

                pst = conn.prepareStatement(Sql);
                pst.executeUpdate(Sql);

                JOptionPane.showMessageDialog(null, "Registration Succussful.");

            } else {
                JOptionPane.showMessageDialog(null, "Fill in all fields.");
            }

        } catch (Exception e) {
            JOptionPane.showMessageDialog(null, e);
        }
    }//GEN-LAST:event_rRegisterActionPerformed

    private void rLogOutActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_rLogOutActionPerformed
        
        //Log out and go back to login page
        new Login().setVisible(true); //Make Login form visible
        this.dispose(); //Dispose of this form (Admin)
    }//GEN-LAST:event_rLogOutActionPerformed

    private void rUpdateActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_rUpdateActionPerformed
        
        //int id = Integer.parseInt(tid.getText());
        String Sql = "update users set password = '" + tpassword.getText()
                + "', role = '" + trole.getSelectedItem() + "', name = '" + tname.getText() + "' where userId = '" + tid.getText() + "'";

        //If all fields are field in the show register sucessful message
        try {
            if (!(tid.getText().trim().isEmpty()) && !(tpassword.getText().trim().isEmpty()) && !(tname.getText().trim().isEmpty())) {
                pst = conn.prepareStatement(Sql);
                pst.executeUpdate(Sql);

                JOptionPane.showMessageDialog(null, "Update Succussful.");

            } else {
                JOptionPane.showMessageDialog(null, "Fill in all fields.");
            }

        } catch (Exception e) {
            JOptionPane.showMessageDialog(null, e);
        }

    }//GEN-LAST:event_rUpdateActionPerformed

    private void rDeleteActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_rDeleteActionPerformed
        
        String s = "select * from users where userId = ? AND name = ?";
        String Sql = "Delete from users where userId = '" + tid.getText() + "' AND name = '" + tname.getText() + "'";

//If all fields are field in the show register sucessful message
        try {
            p = conn.prepareStatement(s);
            p.setString(1, tid.getText());
            p.setString(2, tname.getText());
            rs = p.executeQuery();
            if (rs.next()) {
                if (!(tid.getText().trim().isEmpty()) && !(tname.getText().trim().isEmpty())) {
                    pst = conn.prepareStatement(Sql);
                    pst.executeUpdate(Sql);

                    JOptionPane.showMessageDialog(null, "Delete Successful.");

                } else {
                    JOptionPane.showMessageDialog(null, "Fill in Id and Name");
                }
            } else {
                JOptionPane.showMessageDialog(null, "Id and Name do not match");
            }

        } catch (Exception e) {
            JOptionPane.showMessageDialog(null, e);
        }
    }//GEN-LAST:event_rDeleteActionPerformed

    private void viewStockBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_viewStockBtnActionPerformed
       new viewBlankStock().setVisible(true);
      
    }//GEN-LAST:event_viewStockBtnActionPerformed

    private void deleteBlankBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_deleteBlankBtnActionPerformed
        
        String blankIdLower = blankTypeCombo.getSelectedItem().toString() + lowerBlankNo.getText();
        String blankIdHigher = blankTypeCombo.getSelectedItem().toString() + higherBlankNo.getText();

        long lowerBlank = Long.parseLong(blankIdLower);
        long higherBlank = Long.parseLong(blankIdHigher);

        
        //If all fields are field in the show register sucessful message
        try {

            if (!(lowerBlankNo.getText().trim().isEmpty()) && !(higherBlankNo.getText().trim().isEmpty())) {
                while (lowerBlank <= higherBlank) {
                    String Sql = "delete from Blanks where blankId = '"+lowerBlank+"'";
                    pst = conn.prepareStatement(Sql);
                    pst.executeUpdate(Sql);
                    lowerBlank++;
                }
                JOptionPane.showMessageDialog(null, "Blanks have been deleted.");

            } else {
                JOptionPane.showMessageDialog(null, "Fill in Lowest Blank Number and Highest Blank Number to delete blanks.");
            }

        } catch (Exception e) {
            JOptionPane.showMessageDialog(null, e);
        }
    }//GEN-LAST:event_deleteBlankBtnActionPerformed

    private void addBlankBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_addBlankBtnActionPerformed

        String dateRecieved = dateYear.getSelectedItem().toString() + "/"
                + dateMonth.getSelectedItem().toString() + "/" + dateDay.getSelectedItem().toString();
        String blankIdLower = blankTypeCombo.getSelectedItem().toString() + lowerBlankNo.getText();
        String blankIdHigher = blankTypeCombo.getSelectedItem().toString() + higherBlankNo.getText();

        long lowerBlank = Long.parseLong(blankIdLower);
        long higherBlank = Long.parseLong(blankIdHigher);

        
        //If all fields are field in the show register sucessful message
        try {

            if (!(lowerBlankNo.getText().trim().isEmpty()) && !(higherBlankNo.getText().trim().isEmpty())) {
                while (lowerBlank <= higherBlank) {
                    String Sql = "insert into Blanks (blankId, Date)" + "values('" + lowerBlank + "', '" + dateRecieved + "')";
                    pst = conn.prepareStatement(Sql);
                    pst.executeUpdate(Sql);
                    lowerBlank++;
                }
                JOptionPane.showMessageDialog(null, "Blanks have been added.");

            } else {
                JOptionPane.showMessageDialog(null, "Fill in all fields.");
            }

        } catch (Exception e) {
            JOptionPane.showMessageDialog(null, e);
        }
    }//GEN-LAST:event_addBlankBtnActionPerformed

    private void systemStockBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_systemStockBtnActionPerformed
        
        blankPanel.setVisible(true);
        Dashboard.setVisible(false);
        Backup.setVisible(false);
        userAccPanel.setVisible(false);
        
    }//GEN-LAST:event_systemStockBtnActionPerformed

    private void lowerBlankNoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_lowerBlankNoActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_lowerBlankNoActionPerformed

    private void viewBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_viewBtnActionPerformed
        // TODO add your handling code here:
        new viewEmployees().setVisible(true);
    }//GEN-LAST:event_viewBtnActionPerformed

    private void restorePathActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_restorePathActionPerformed
       
    }//GEN-LAST:event_restorePathActionPerformed

    private void restoreDbBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_restoreDbBtnActionPerformed
        //Change to your username and pass
        String user = "root";
        String pass = "Maputo31"; 
        //Chang to path of restor to you mysql in the mySqlworkbench
        String[] restore = new String[]{"/Applications/MySQLWorkbench.app/Contents/MacOS/mysql","--user="+user, "--password="+pass,"-e", "source "+ path};
        
        Process process;
        try{
            process = Runtime.getRuntime().exec(restore);
            int processComplete = process.waitFor();
            
            if (processComplete == 0){
                JOptionPane.showMessageDialog(null, "Restore was successful!");
                restorePath.setText("");
            } else {
                JOptionPane.showMessageDialog(null,"Restore Failed.");
            }
            
        }catch(Exception e){
            JOptionPane.showMessageDialog(null, e);
        }
    }//GEN-LAST:event_restoreDbBtnActionPerformed

    private void backupBrowseBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_backupBrowseBtnActionPerformed
        JFileChooser f = new JFileChooser();
        f.showOpenDialog(this);
        String date = new SimpleDateFormat("yyyyMMdd").format(new java.util.Date());
        
        try{
            File file = f.getSelectedFile();
            path = file.getAbsolutePath();
            //path = path.replace("\\", "/");
            path = path + "_" + date + ".sql";
            backupPath.setText(path); 
        }
        catch(Exception e){ 
            JOptionPane.showMessageDialog(null, e);
        }
    }//GEN-LAST:event_backupBrowseBtnActionPerformed

    private void backupDbBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_backupDbBtnActionPerformed
        Process process;
       //Change this to include the pathh to your sql dump and your user name and password -u(username) and -p(PAss) -B (DBNAME)
        String mySqlBin = "/Applications/MySQLWorkbench.app/Contents/MacOS/mysqldump -uroot -pMaputo31 --add-drop-database -B ATS -r"; 
        
        try{
            Runtime runtime = Runtime.getRuntime();
            process = runtime.exec(mySqlBin + path);

            int processComplete = process.waitFor();
            if (processComplete == 0){
                
                JOptionPane.showMessageDialog(null, "Backup Created");
                backupPath.setText("");
            }else{
                JOptionPane.showMessageDialog(null, "Backup Failed.");
            }
        }catch(Exception e){
            
            JOptionPane.showMessageDialog(null, e);
            
        }
    }//GEN-LAST:event_backupDbBtnActionPerformed

    private void restoreBrowseBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_restoreBrowseBtnActionPerformed
        JFileChooser f = new JFileChooser();
        f.showOpenDialog(this);
        
        try{
            File file = f.getSelectedFile();
            path = file.getAbsolutePath();
            path = path.replace("\\", "/");  
            restorePath.setText(path);   
        }
        catch(Exception e){ 
           JOptionPane.showMessageDialog(null, e);
        }
        
    }//GEN-LAST:event_restoreBrowseBtnActionPerformed

    private void ReportsButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ReportsButtonActionPerformed
        Dashboard.setVisible(false);
        Backup.setVisible(false);
        userAccPanel.setVisible(false);
        blankPanel.setVisible(false);
        new ViewTurnover().setVisible(true);
    }//GEN-LAST:event_ReportsButtonActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Admin.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Admin.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Admin.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Admin.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new Admin().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JPanel AdminBackPanel;
    private javax.swing.JPanel AdminDynamicPanel;
    private javax.swing.JPanel AdminMenuPanel;
    private javax.swing.JPanel AdminTopPanel;
    private javax.swing.JLabel AirViaLtdLabel;
    private javax.swing.JPanel Backup;
    private javax.swing.JPanel Dashboard;
    private javax.swing.JLabel Date;
    private javax.swing.JLabel PlaneImg;
    private javax.swing.JButton ReportsButton;
    private javax.swing.JButton UserAccBtn;
    private javax.swing.JButton addBlankBtn;
    private javax.swing.JButton backupBrowseBtn;
    private javax.swing.JButton backupBtn;
    private javax.swing.JButton backupDbBtn;
    private javax.swing.JTextField backupPath;
    private javax.swing.JPanel blankPanel;
    private javax.swing.JLabel blankType;
    private javax.swing.JComboBox<String> blankTypeCombo;
    private javax.swing.JComboBox<String> dateDay;
    private javax.swing.JComboBox<String> dateMonth;
    private javax.swing.JComboBox<String> dateYear;
    private javax.swing.JButton deleteBlankBtn;
    private javax.swing.JTextField higherBlankNo;
    private javax.swing.JButton homeBtn;
    private javax.swing.JLabel id;
    private javax.swing.JTextArea infoTextArea1;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTextField lowerBlankNo;
    private javax.swing.JLabel name;
    private javax.swing.JLabel password;
    private javax.swing.JButton rDelete;
    private javax.swing.JButton rLogOut;
    private javax.swing.JButton rRegister;
    private javax.swing.JButton rUpdate;
    private javax.swing.JPanel registerPanel;
    private javax.swing.JButton restoreBrowseBtn;
    private javax.swing.JButton restoreDbBtn;
    private javax.swing.JTextField restorePath;
    private javax.swing.JLabel role;
    private javax.swing.JButton systemStockBtn;
    private javax.swing.JPanel systemStockPanel;
    private javax.swing.JTextField tid;
    private javax.swing.JTextField tname;
    private javax.swing.JPasswordField tpassword;
    private javax.swing.JComboBox<String> trole;
    private javax.swing.JPanel userAccPanel;
    private javax.swing.JButton viewBtn;
    private javax.swing.JButton viewStockBtn;
    // End of variables declaration//GEN-END:variables
}
